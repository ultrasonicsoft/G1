<Application x:Class="GlassProductManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
              xmlns:inputToolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
             
             StartupUri="MainWindow.xaml">
    <Application.Resources>


        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#A5FFFFFF"/>
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="TextBackColor" Color="#333337"/>
        <SolidColorBrush x:Key="TextColor" Color="#444"/>
        <SolidColorBrush x:Key="TextColorDisabled" Color="#888"/>
        <SolidColorBrush x:Key="BorderColor" Color="#97a8ac"/>
        <SolidColorBrush x:Key="SolidBorderBrush" Color="#ddd" />
        
       
        <Style  x:Key="textBoxNumericErrorStyle"
            TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
            Value="True" />
            <Setter Property="OverridesDefaultStyle"
            Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
            Value="None" />
            <Setter Property="FocusVisualStyle"
            Value="{x:Null}" />
            <Setter Property="MinWidth"
            Value="10" />
            <Setter Property="MaxWidth"
            Value="120" />
            <Setter Property="Height"  Value="22" />
            <Setter Property="FontSize"  Value="12" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="AllowDrop"
            Value="true" />
            <Setter Property="ToolTip" Value="Please enter only numbers!"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Name="test">
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="#FF888888" x:Name="Bd" CornerRadius="1" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <!--<Border Background="{StaticResource TextBoxBackground}" BorderBrush="#FF888888" x:Name="Bd" CornerRadius="1" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>-->
                            
                            <Image Name="ErrorImage" Width="15" Height="15" Margin="0,0,4,0" Source="Images/validate.png" HorizontalAlignment="Right">

                            </Image>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="textBoxEmptyErrorStyle"
            TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
            Value="True" />
            <Setter Property="OverridesDefaultStyle"
            Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
            Value="None" />
            <Setter Property="FocusVisualStyle"
            Value="{x:Null}" />
            <Setter Property="MinWidth"
            Value="10" />
            <Setter Property="MaxWidth"
            Value="120" />
            <Setter Property="Height"
            Value="22" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="AllowDrop"
            Value="true" />
            <Setter Property="ToolTip" Value="This field can not be empty!"/>
            <Setter Property="FontSize"  Value="12" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Name="test">
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="#FF888888" x:Name="Bd" CornerRadius="1" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <Image Name="ErrorImage" Width="15" Height="15" Margin="0,0,4,0" Source="Images/validate.png" HorizontalAlignment="Right">

                            </Image>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="textBoxPhoneErrorStyle"
            TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
            Value="True" />
            <Setter Property="OverridesDefaultStyle"
            Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
            Value="None" />
            <Setter Property="FocusVisualStyle"
            Value="{x:Null}" />
            <Setter Property="MinWidth"
            Value="10" />
            <Setter Property="MaxWidth"
            Value="120" />
            <Setter Property="Height"
            Value="22" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="AllowDrop"
            Value="true" />
            <Setter Property="ToolTip" Value="Invalid phone number!"/>
            <Setter Property="FontSize"  Value="12" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Name="test">
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="#FF888888" x:Name="Bd" CornerRadius="1" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <Image Name="ErrorImage" Width="15" Height="15" Margin="0,0,4,0" Source="Images/validate.png" HorizontalAlignment="Right">

                            </Image>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="textBoxEmailErrorStyle"
            TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
            Value="True" />
            <Setter Property="OverridesDefaultStyle"
            Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
            Value="None" />
            <Setter Property="FocusVisualStyle"
            Value="{x:Null}" />
            <Setter Property="MinWidth"
            Value="10" />
            <Setter Property="MaxWidth"
            Value="230" />
            <Setter Property="Height"
            Value="22" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="AllowDrop"
            Value="true" />
            <Setter Property="ToolTip" Value="Invalid Email Address!"/>
            <Setter Property="FontSize"  Value="12" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Name="test">
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="#FF888888" x:Name="Bd" CornerRadius="1" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                            <Image Name="ErrorImage" Width="15" Height="15" Margin="0,0,4,0" Source="Images/validate.png" HorizontalAlignment="Right">

                            </Image>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="textBoxCurrencyErrorStyle"
            TargetType="{x:Type TextBox}">
            <Setter Property="SnapsToDevicePixels"
            Value="True" />
            <Setter Property="OverridesDefaultStyle"
            Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation"
            Value="None" />
            <Setter Property="FocusVisualStyle"
            Value="{x:Null}" />
            <Setter Property="MinWidth"
            Value="10" />
            <Setter Property="MaxWidth"
            Value="120" />
            <Setter Property="Height"
            Value="22" />
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="AllowDrop"
            Value="true" />
            <Setter Property="ToolTip" Value="Invalid currency entered!"/>
            <Setter Property="FontSize"  Value="12" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Name="test">
                            <Border Background="{StaticResource TextBackColor}" BorderBrush="#FF888888" x:Name="Bd" CornerRadius="1" BorderThickness="1">
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>

                            <Image Name="ErrorImage" Width="15" Height="15" Margin="0,0,4,0" Source="Images/validate.png" HorizontalAlignment="Right">

                            </Image>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--Background-->
        <SolidColorBrush x:Key="Background" Color="#1C1C1C"/>
        <SolidColorBrush x:Key="LightBackground" Color="#2D2D30"/>

        <!--Foreground-->
        <SolidColorBrush x:Key="Foreground" Color="#FFFFFF"/>

        <!--General-->
        <SolidColorBrush x:Key="BackgroundHighlighted" Color="#54545C"/>
        <SolidColorBrush x:Key="BorderBrushHighlighted" Color="#6A6A75"/>
        <SolidColorBrush x:Key="BackgroundSelected" Color="#007ACC"/>
        <SolidColorBrush x:Key="BorderBrushSelected" Color="#1C97EA"/>
        <SolidColorBrush x:Key="BackgroundNormal" Color="#3F3F46"/>
        <SolidColorBrush x:Key="BorderBrushNormal" Color="#54545C"/>

        <!--Link Button-->
        <SolidColorBrush x:Key="LinkButtonForeground" Color="#1297FB"/>
        <SolidColorBrush x:Key="LinkButtonForegroundHighlighted" Color="#55AAFF"/>
        
        <Style TargetType="Button">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="Background" Value="{StaticResource BackgroundNormal}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BorderBrushNormal}"/>
            <Setter Property="Height" Value="23"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border SnapsToDevicePixels="True"
				            BorderThickness="1"
				            BorderBrush="{TemplateBinding BorderBrush}" 
				            Background="{TemplateBinding Background}">
                            <Grid SnapsToDevicePixels="True">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                                <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource BackgroundSelected}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value=".5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="LinkButton" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Foreground" Value="{StaticResource LinkButtonForeground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock><ContentPresenter/></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource LinkButtonForegroundHighlighted}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Window" >
            <Setter Property="Background" Value="{StaticResource LightBackground}"/>
        </Style>
        
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="11"/>
        </Style>

        <!--Text Box-->
        <SolidColorBrush x:Key="TextBoxBackground" Color="#333337"/>
        <SolidColorBrush x:Key="TextBoxBackgroundSelected" Color="#3F3F46"/>

        <!--Search Text Box-->
        <SolidColorBrush x:Key="SearchTextForeground" Color="#999999"/>
        
        <Style TargetType="TextBox" >
            <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="CaretBrush" Value="{StaticResource Foreground}"/>
            <Setter Property="FontSize"  Value="12" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="1"/>
                            
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource TextBoxBackgroundSelected}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Background" Value="{StaticResource TextBoxBackgroundSelected}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>            

        </Style>

        <Style TargetType="TextBox" x:Key="DefaultTextBox">
            <Setter Property="Background" Value="{StaticResource TextBoxBackground}"/>
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="CaretBrush" Value="{StaticResource Foreground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="1"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" Value="{StaticResource TextBoxBackgroundSelected}"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter Property="Background" Value="{StaticResource TextBoxBackgroundSelected}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize"  Value="12" />
        </Style>
        <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
            <Setter Property="SnapsToDevicePixels"
          Value="true" />
            <Setter Property="OverridesDefaultStyle"
          Value="true" />
            <Setter Property="KeyboardNavigation.TabNavigation"
          Value="None" />
            <Setter Property="FocusVisualStyle"
          Value="{x:Null}" />
            <Setter Property="FontFamily"
          Value="Verdana" />
            <Setter Property="PasswordChar"
          Value="*" />
            <Setter Property="MinWidth"
          Value="120" />
            <Setter Property="MinHeight"
          Value="20" />
            <Setter Property="AllowDrop"
          Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type PasswordBox}">
                        <Border x:Name="Border"
                CornerRadius="2"
                Padding="2"
                BorderThickness="1">
                            <Border.Background>
                                <SolidColorBrush Color="#333337" />
                            </Border.Background>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#333337" />
                            </Border.BorderBrush>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled" />
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

       

        <!-- *********************************  ToggleButton Style  ********************************* -->
        <Color x:Key="Color_001">#FFFFFFFF</Color>
        <Color x:Key="Color_002">#FFBABABA</Color>
        <Color x:Key="Color_006">#FF454545</Color>
        <Color x:Key="Color_004">#FF747474</Color>
        <Color x:Key="Color_024">#FF00AADE</Color>
        <Color x:Key="Color_009">#FF181818</Color>
        <SolidColorBrush x:Key="ForegroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="ButtonHoverBackgroundBrush" Color="{StaticResource Color_006}" />
        <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="{StaticResource Color_004}" />
        <SolidColorBrush x:Key="LightForegroundBrush" Color="{StaticResource Color_001}" />
        <SolidColorBrush x:Key="ButtonPressedBackgroundBrush" Color="{StaticResource Color_024}" />
        <SolidColorBrush x:Key="ButtonPressedBorderBrush" Color="{StaticResource Color_024}" />
        <SolidColorBrush x:Key="ButtonBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="ButtonBorderBrush" Color="{StaticResource Color_006}" />
        <SolidColorBrush x:Key="DisabledVisualElement" Color="{StaticResource Color_009}" Opacity="0.6" />

        <Style  TargetType="{x:Type ToggleButton}">
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="FontSize" Value="14.667" />
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="Padding" Value="10,0,10,2" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="MinWidth" Value="30" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBackgroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonHoverBorderBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBackgroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="Stroke">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ButtonPressedBorderBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="DisabledVisualElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="checked">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="contentControl1">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Foreground" Storyboard.TargetName="contentControl1">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource LightForegroundBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedVisualElement">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Rectangle x:Name="Bd" Fill="{StaticResource ButtonBackgroundBrush}" Stroke="{StaticResource ButtonBorderBrush}" StrokeThickness="1" />
                            <Rectangle x:Name="checked" Fill="{StaticResource ButtonPressedBackgroundBrush}" Stroke="{StaticResource ButtonPressedBorderBrush}" StrokeThickness="1" Visibility="Collapsed" />
                            <ContentControl x:Name="contentControl" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{TemplateBinding Foreground}">
                                <ContentPresenter x:Name="contentPresenter" />
                            </ContentControl>
                            <ContentControl x:Name="contentControl1" Visibility="Collapsed" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}" Foreground="{StaticResource ForegroundBrush}">
                                <ContentPresenter x:Name="contentPresenter1" />
                            </ContentControl>
                            <Rectangle x:Name="FocusedVisualElement" Stroke="{StaticResource ButtonPressedBorderBrush}" Visibility="Collapsed" StrokeThickness="2" />
                            <Rectangle x:Name="DisabledVisualElement" Fill="{StaticResource DisabledVisualElement}" Visibility="Collapsed" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- *********************************  ToggleButton Style  ********************************* -->

        <Style  TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Resources>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{StaticResource BackgroundNormal}"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Grid Margin="4,0,4,4">
                                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" SnapsToDevicePixels="True"/>
                                    <ContentPresenter Margin="8,5"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="True" />
                                            <Condition Property="IsSelected" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}" />
                                    </MultiTrigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{StaticResource BackgroundSelected}" />
                                        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSelected}" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>

        <!-- *********************************  Datagrid Style  ********************************* -->
      <Style TargetType="DataGrid">
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Background" Value="{StaticResource LightBackground}"/>
            <Setter Property="RowBackground" Value="{StaticResource LightBackground}"/>
            <Style.Resources>
                <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
                    <Setter Property="Width" Value="8"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Cursor" Value="SizeWE"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="MinWidth" Value="120"/>
                    <Setter Property="MinHeight" Value="28"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                <Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="BackgroundBorder" Grid.ColumnSpan="2" Background="{StaticResource BackgroundSelected}"/>
                                        <TextBlock Foreground="{StaticResource Foreground}" FontSize="12" FontWeight="SemiBold">
                                        <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center"/>
                                        </TextBlock>
                                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                                      Grid.Column="1" Width="8" Height="6" Fill="{StaticResource Foreground}" Margin="0,0,8,0" 
                                      VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                                    </Grid>
                                    <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                    <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="SortDirection" Value="{x:Null}">
                                        <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource BackgroundNormal}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true" />
                                            <Condition Property="SortDirection" Value="{x:Null}" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource BackgroundHighlighted}"/>
                                    </MultiTrigger>
                                    <Trigger Property="SortDirection" Value="Ascending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                        <Setter TargetName="SortArrow" Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180"/>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                    <Trigger Property="SortDirection" Value="Descending">
                                        <Setter TargetName="SortArrow" Property="Visibility" Value="Visible"/>
                                    </Trigger>
                                    <Trigger Property="DisplayIndex" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type DataGridCell}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="MinHeight" Value="28" />
                    <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Border Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                    <ContentPresenter Margin="6,3,6,3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}"/>
                                        <!--<Setter Property="Background" Value="{StaticResource BackgroundHighlighted}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{StaticResource BackgroundHighlighted}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>

        <!-- *********************************  GroupBox Style  ********************************* -->
        <Style  TargetType="GroupBox">
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackgroundNormal}"/>
            <Setter Property="BorderThickness" Value="2"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ContentPresenter ContentSource="Header" Margin="2"/>
                            <ContentPresenter Margin="{TemplateBinding Padding}" Grid.Row="1"/>
                            <Border SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.Row="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ********************************** CheckBoxStyle **********************************-->
        <Color x:Key="Color_016">#00FFFFFF</Color>
        <Color x:Key="Color_028">#FFD0284C</Color>

        <SolidColorBrush x:Key="TransparentBrush" Color="{StaticResource Color_016}" />
        <SolidColorBrush x:Key="CheckBoxBorderBrush" Color="{StaticResource Color_006}" />
        <SolidColorBrush x:Key="CheckBoxBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="{StaticResource Color_004}" />
        <SolidColorBrush x:Key="CheckBoxHoverBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="CheckBoxPressedBorderBrush" Color="{StaticResource Color_024}" />
        <SolidColorBrush x:Key="CheckBoxPressedBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="CheckBoxFocusedBorderBrush" Color="{StaticResource Color_024}" />
        <SolidColorBrush x:Key="CheckBoxFocusedBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="CheckBoxInvalidUnfocusedBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="CheckBoxInvalidFocusedBorderBrush" Color="{StaticResource Color_028}" />
        <SolidColorBrush x:Key="CheckBoxInvalidFocusedBackgroundBrush" Color="{StaticResource Color_009}" />
        <SolidColorBrush x:Key="CheckBoxIndeterminateCheckBackgroundBrush" Color="{StaticResource Color_004}" />
        <SolidColorBrush x:Key="CheckBoxCheckBackgroundBrush" Color="{StaticResource Color_024}" />

        <Style  TargetType="CheckBox">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="FontFamily" Value="Segoe UI" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="6,0,0,0" />
            <Setter Property="MinHeight" Value="30" />
            <Setter Property="MinWidth" Value="30" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="hover" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="pressed" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter" />
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="FocusStates">
                                    <VisualState x:Name="Focused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="focused" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unfocused" />
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ValidationStates">
                                    <VisualState x:Name="Valid" />
                                    <VisualState x:Name="InvalidUnfocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidUnfocused" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="InvalidFocused">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="invalidFocused" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="{StaticResource TransparentBrush}" />
                            <Rectangle x:Name="normal" Opacity="1" Stroke="{StaticResource CheckBoxBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxBackgroundBrush}" Width="18" Height="18" />
                            <Rectangle x:Name="hover" Stroke="{StaticResource CheckBoxHoverBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxHoverBackgroundBrush}" Opacity="0" Width="18" Height="18" />
                            <Rectangle x:Name="pressed" Opacity="0" Stroke="{StaticResource CheckBoxPressedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxPressedBackgroundBrush}" Width="18" Height="18" />
                            <Rectangle x:Name="focused" Opacity="0" Stroke="{StaticResource CheckBoxFocusedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxFocusedBackgroundBrush}" Width="18" Height="18" />
                            <Rectangle x:Name="invalidUnfocused" Opacity="0" Stroke="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxInvalidUnfocusedBackgroundBrush}" Width="18" Height="18" />
                            <Rectangle x:Name="invalidFocused" Opacity="0" Stroke="{StaticResource CheckBoxInvalidFocusedBorderBrush}" StrokeThickness="1" Fill="{StaticResource CheckBoxInvalidFocusedBackgroundBrush}" Width="18" Height="18" />
                            <Path x:Name="checkBox" Height="10" Width="12" Stretch="Fill" Opacity="0" Data="M 1145.607177734375,430 C1145.607177734375,430 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1141.449951171875,435.0772705078125 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1139.232177734375,433.0999755859375 1138,434.5538330078125 1138,434.5538330078125 1138,434.5538330078125 1141.482177734375,438 1141.482177734375,438 1141.482177734375,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.607177734375,430 1145.607177734375,430 z" Fill="{StaticResource CheckBoxCheckBackgroundBrush}" UseLayoutRounding="False" />
                            <Rectangle x:Name="IndeterminateCheck" Fill="{StaticResource CheckBoxIndeterminateCheckBackgroundBrush}" Height="3" Width="8" Opacity="0" />
                            <Rectangle x:Name="disabled" Opacity="0" StrokeThickness="1" Fill="{StaticResource DisabledVisualElement}" Width="18" Height="18" />
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ********************************** Combobox Style **********************************-->
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="20"/>
                </Grid.ColumnDefinitions>
                <Border SnapsToDevicePixels="True" x:Name="Border" Grid.ColumnSpan="2" Background="{StaticResource BackgroundNormal}" BorderBrush="{StaticResource BorderBrushNormal}" BorderThickness="1" />
                <Path x:Name="Arrow" Grid.Column="1" Opacity="0.6" Fill="{StaticResource Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Arrow" Property="Opacity" Value="1" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                    <Setter TargetName="Arrow" Property="Opacity" Value="1" />
                    <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource BackgroundSelected}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>

        <Style  TargetType="ComboBox">
            <Setter Property="Foreground" Value="{StaticResource Foreground}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="MinWidth" Value="120"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" 
                                      Template="{StaticResource ComboBoxToggleButton}" 
                                      Grid.Column="2" 
                                      Focusable="false" 
                                      IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                      ClickMode="Press"/>
                            <ContentPresenter Name="ContentSite" 
                                          IsHitTestVisible="False"  
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Margin="3,3,23,3" 
                                          VerticalAlignment="Center" 
                                          HorizontalAlignment="Left"/>
                            <TextBox x:Name="PART_EditableTextBox" 
                                 CaretBrush="{StaticResource Foreground}"
                                 Style="{x:Null}" 
                                 Template="{StaticResource ComboBoxTextBox}" 
                                 HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" 
                                 Margin="3,3,23,3" 
                                 Focusable="True" 
                                 Background="Transparent" 
                                 Foreground="{StaticResource Foreground}" 
                                 Visibility="Hidden" 
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup VerticalOffset="-1" SnapsToDevicePixels="True" Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True"  Focusable="False" PopupAnimation="Slide">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{StaticResource BackgroundNormal}" BorderThickness="1" BorderBrush="{StaticResource BorderBrushNormal}"/>
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="ComboBoxItem">
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border Name="Border" Padding="2" SnapsToDevicePixels="true" BorderThickness="1">
                                    <ContentPresenter />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="Border" Property="Background" Value="{StaticResource BackgroundHighlighted}"/>
                                        <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource BorderBrushHighlighted}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Style.Resources>
        </Style>
    </Application.Resources>
</Application>
